#------------------------------------------------------
# MOM - My Overpowered M600 macro / written by Jay Lexx
# Also, tenderly called the Mother Of Macros by u/Woodcat64
# Granted superpowers to become Mrs. Incredible by u/RushHour2k5 by fully defining variables!
# Listen to MOM and everything will be alright!
#------------------------------------------------------
#  NO RESPONSE TAKEN FOR ANY DAMAGE CAUSED BY MOM ;)
#------------------------------------------------------
#
# 04/26/2022 v0.3.2
# Removed call for variable in HTML UI and added a missing variable for Z_feedrate in m600cfg.
#
# 04/26/2022 v0.3.1
# Corrected variables to use full math calculations for acceleration and feedrates.
#
# 04/26/2022 v0.3.0
# Source code rewritten by r/RushHour2k5 to mimic Marlin's Advanced Pause Feature.
#
# 04/26/2022 v0.2.0
# Souce code updated to work with LONGER LK5 Pro using Marlin 2.0 values.
#
# 09/11/2021 v0.1.6
# Source code maintenance due to Klipper updates.
#
# XX/XX/XXXX v0.1.5
# Added ability to prevent nozzle cooldown.
#
# Save this file f.e. as /home/pi/klipper_config/ADVANCED_PAUSE.cfg to leave printer.cfg nice and clean
# then use [include /home/pi/klipper_config/ADVANCED_PAUSE.cfg] in your printer.cfg
# Don't forget to configure default values in [gcode_macro m600cfg] down below
# 
#
# Usage in CURA Slicer:
# Extensions > Post Processing > Modify G-Code
#	Add a script -> Filament Change
#			Set Layer to value at which filament should be changed.
#			I personally set the rest to 0, works like a charm.
#
# The M600 command can also be used to just change filament from console or via Button.
# No need to Park, Unload, Load, and Purge. The macro should return to the temp
# the printer had when it was started, regardless ff printer temperature at 0, 40 or 200.
# It will check if temperature is high enough to extrude filament (if you have configured your 
# min_extrude_temp in printer.cfg). If not it will use the default temperature configured down below anyway.
# 
# If the printer is not homed, it will perform the G28 homing sequence.
# This will not happen mid-print, don't worry. 
# 
# -----------------------------------------------------
#  DESIGNED TO WORK ESPECIALLY WITH OCTOPRINT
# -----------------------------------------------------
# In Octoprint set Plugins -> Printer Dialogs -> Enable Support = Always
# Thx to u/josolanes for mentioning the fix for this possible issue
#
# Included macros are in this magic box:
#
# Handles navigation inside the whole process (WARNING: DO NOT RUN AS A TERMINAL COMMAND! YOU HAVE BEEN WARNED!)
# [JOB_CENTER]
#
# Heatup process & temperature processor
# uses printer.cfg [extruder] section max_temp & min_extrude_temp
# [LOW_TEMP_CHECK T]
#
# Park print head.
# [M125]
#
# Marlin compatible guided Filament Change
# [M600]
#
# Load filament.
# [M701]
#
# Unload filament
# [M702]
#
# Handle prompt response (to communicate with octoprint).
# [M876 S]

#-------------------------------------------------------------------------

# Remove or comment out [respond] and [pause_resume] if already in your printer.cfg.
# Both are needed to make MOM run the household and use social media.

#-------------------------------------------------------------------------

#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.
[pause_resume]
recover_velocity: 50.0

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#-------------------------------------------------------------------------

#####################
[gcode_macro m600cfg]
#####################

# CONFIGURE YOUR VALUES INSIDE THIS GCODE_MACRO

# Default temperature in Celsius to heat up if M600 issued in terminal
# Ignored if a target temperature is already set at launch ( M104 / M109 )
# or started within a print job.
variable_default_temp: 250.0

# Should the hotend cool down when paused?
# 1 - The hotend cools down when paused (Recommended for safety reasons and saves energy if 
#     you're away a longer period of time and therefore can't change the filament)
# 0 - The hotend stays hot (Not recommended, you never know...)
variable_cooldown: 0

# Should the cooling fans stay on when parked?
# 1 - Cooling fans will remain on while parked.
# 0 - Cooling fans will turn off while parked and resume with the print.
variable_fans: 1

# X & Y coordinates to and feedrate (mm/min) for parking hotend at (absolute values).
variable_x: 5.0
variable_y: 295.0
variable_park_feedrate: 600.0

# mm to raise Z-axis from current height (relative value) and feedrate (in mm/min) for Filament Change.
variable_z: 10.0
variable_z_feedrate: 300.0
# If current Z-axis height is below zmin (absolute value in mm), head will lift zmin (relative value) instead of z
# making it easier to clean the nozzle.
variable_zmin: 150.0

# Speed at which filament is retracted prior to parking nozzle (mm/min). 
variable_park_retract_feedrate: 3600.0
# mm to retract prior to parking nozzle.
variable_park_retract_length: 2.0

# mm to initially retract at start of M701.
variable_unload_purge_retract: 13.0
# Delay for the filament to cool after retract (milliseconds [ms]).
variable_unload_purge_delay: 5000
# mm to purge after initial retract.
variable_unload_purge_length: 8.0
# Speed at which filament is purged after initial retraction (mm/min).
variable_unload_purge_feedrate: 1500.0
# Speed at which filament is unloaded (mm/min). 
variable_unload_feedrate: 6000.0
# Lower acceleration may allow a faster feedrate (mm/sec^2).
variable_unload_accel: 625.0
# mm to rapidly unload filament (length of the bowden tube and hotend including nozzle).
variable_unload_length: 430.0

# Speed at which filament is slowly loaded (mm/min).
variable_slow_load_feedrate: 600.0
# mm to slowly load filament.
variable_slow_load_length: 25.0

# Speed at which filament is rapidly loaded (mm/min).
variable_fast_load_feedrate: 2400.0
# Lower acceleration may allow a faster feedrate (mm/sec^2).
variable_fast_load_accel: 625.0
# mm to fast load filament (length of the bowden tube without hotend purge).
variable_fast_load_length: 380.0

# Speed at which filament is slowly purged (mm/min).
variable_purge_feedrate: 180.0
# mm of filament to purge after fast load.
variable_purge_length: 50.0
# On screen option to extract an additional xx mm of filament after loading if purge was not completed.
variable_additional_purge: 10.0

#Additional output send via M117 or M118
variable_output: 118

# !-ATTENTION---------------------------------------------------------!
# ! Uncomment the desired language / Comment (Delete) the other       !
# ! If you edit the language DO NOT use special characters            !
# ! like Ü, Ö, Ä, Ǣ or É in your language, the macro will not work    !
# ! and will show a UnicodeDecodeError: 'ascii'...                    !
# !-------------------------------------------------------------------!

# HTML UI in Deutsch (German)
#variable_step_a1: "<CENTER><P><B>SCHRITT 1/3 </B></P><H2>ZEIT ZU WECHSELN</H2>"
#variable_step_b1:"Achtung, der Druckkopf ist ggfs. heiss!<dl><dt>"
#variable_step_c1:"Die Temperatur wurde zur Sicherheit auf 0ºC gesetzt<dl><dt>"
#variable_step_d1:"Klicke <b>WEITER</B> um (wieder) aufzuheizen<BR> Klipper wird anschliessend das Filament entladen<BR><BR>"

#variable_step_2: "<CENTER><P><B>SCHRITT 2/3</B></P><B>Lade jetzt das neue Filament und klicke auf WEITER<BR><BR>( +/- 10mm in den PTFE Schlauch)"
#variable_step_3: "<CENTER><P><B>SCHRITT 3/3</B></P><B>Reinige den Druckkopf, klicke dann WEITER um mit dem Druck fortzufahren oder ZURUECK um zum vorherigen Schritt 2 zu gelangen."
#variable_next: "WEITER"
#variable_previous: "ZURUECK"
#variable_cancel: "ABBRUCH"
#variable_purgetext: "EXTRAHIERE"

# HTML UI in English
variable_step_a1: "<CENTER><P><B>STEP 1/3 </B></P><H2>CHANGE FILAMENT</H2>"
variable_step_b1: "Caution, the nozzle is still hot! <dl><dt>"
variable_step_c1: "Nozzle temperature set to 0ºC for safety reasons.<dl><dt>"
variable_step_d1: "Click <B>NEXT</B> to Continue. Nozzle will reheat if needed and<BR> Klipper will then unload the filament.<BR><BR>"
variable_step_2: "<CENTER><P><B>STEP 2/3</B></P><B>Load the new filament and click NEXT.<BR><BR>"
variable_step_3: "<CENTER><P><B>STEP 3/3</B></P><B>Clean the nozzle, then click NEXT to resume print or click BACK to unload again and return to step 2."
variable_cancel: "CANCEL"
variable_finish: "FINISH"
variable_next: "NEXT"
variable_previous: "BACK"
variable_purgetext: "PURGE"

gcode:

     #-# * * * THERE SHOULD BE NO NEED TO EDIT ANYTHING BELOW THIS POINT * * * #-#

     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=default_temp VALUE={default_temp}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=cooldown VALUE={cooldown}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=fans VALUE={fans}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=x VALUE={x}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=y VALUE={y}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=park_feedrate VALUE={park_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=z VALUE={z}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=z_feedrate VALUE={z_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=zmin VALUE={zmin}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=park_retract_feedrate VALUE={park_retract_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=park_retract_length VALUE={park_retract_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_purge_retract VALUE={unload_purge_retract}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_purge_delay VALUE={unload_purge_delay}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_purge_length VALUE={unload_purge_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_purge_feedrate VALUE={unload_purge_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_feedrate VALUE={unload_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_accel VALUE={unload_accel}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=unload_length VALUE={unload_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=slow_load_feedrate VALUE={slow_load_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=slow_load_length VALUE={slow_load_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=fast_load_feedrate VALUE={fast_load_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=fast_load_accel VALUE={fast_load_accel}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=fast_load_length VALUE={fast_load_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=purge_feedrate VALUE={purge_feedrate}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=purge_length VALUE={purge_length}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=additional_purge VALUE={additional_purge}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=output VALUE={output}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_a1 VALUE={step_a1}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_b1 VALUE={step_b1}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_v1 VALUE={step_c1}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_d1 VALUE={step_d1}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_2 VALUE={step_2}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=step_3 VALUE={step_3}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=cancel VALUE={cancel}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=finish VALUE={finish}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=next VALUE={next}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=previous VALUE={previous}
     SET_GCODE_VARIABLE MACRO=m600cfg VARIABLE=purgetext VALUE={purgetext}


#####################
[gcode_macro M876]
#####################

variable_myjob: 0

gcode:

	{% set S = params.S|default(-1)|int %}

	{% set myjob = printer["gcode_macro JOB_CENTER"].job %}

	{% if  myjob != 0 %}

		{% if S == 1 %}

			{% set myjob=myjob-2 %}	#Jump to previous Step

		{% endif %}

		{% if S == 2 %}

			{% set myjob=6004 %}

		{% endif %}

        	JOB_CENTER NEWJOB={myjob}

	{% endif %}


#######################
[gcode_macro JOB_CENTER]
#######################

variable_temperature: 0
variable_job: 0
variable_myjob: 0
variable_cool: 1
variable_mystep: 1

gcode:
	{% set NEWJOB = params.NEWJOB|default(0)|int %}

	{% set myjob = printer["gcode_macro JOB_CENTER"].job %}

	{% if NEWJOB == 6004 %}

		M{printer["gcode_macro m600cfg"].output|int} Purging...
		M83
    		G92 E0.0
          G1 E{printer["gcode_macro m600cfg"].purge_length|int} F{printer["gcode_macro m600cfg"].purge_feedrate|int}
          G1 E-{printer["gcode_macro m600cfg"].park_retract_length|int} F{printer["gcode_macro m600cfg"].park_retract_feedrate|int}
          G92 E0.0

		{% set NEWJOB=6005 %}

	{% endif %}

	{% if NEWJOB == 6003 %}

          M{printer["gcode_macro m600cfg"].output|int} Resuming the print...

          {% if printer["gcode_macro JOB_CENTER"].temperature==0 %}

		     M109 S0

          {% else %}

               M109 S{printer["gcode_macro JOB_CENTER"].temperature}

          {% endif%}

	RESUME
     RESPOND TYPE=command MSG="action:notification Resuming the print..."

	{% set myjob=0 %}

	{% endif %}

	{% if ( NEWJOB == 6002 or NEWJOB == 6005) %}

		{% if NEWJOB==6002 %}

			M{printer["gcode_macro m600cfg"].output|int} Loading Filament
			M701

		{% endif %}

		RESPOND TYPE=command MSG="action:prompt_begin {printer["gcode_macro m600cfg"].step_3}"
		RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].finish}"
		RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].previous}"
		RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].purgetext} {printer["gcode_macro m600cfg"].additional_purge|int}mm"
		RESPOND TYPE=command MSG="action:prompt_show"

          {% set myjob=6003 %}

	{% endif %}

	{% if NEWJOB == 6001 %}

		LOW_TEMP_CHECK T={printer["gcode_macro JOB_CENTER"].temperature}
		M{printer["gcode_macro m600cfg"].output|int} Unloading Filament
		M702
		RESPOND TYPE=command MSG="action:prompt_begin {printer["gcode_macro m600cfg"].step_2}"
          RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].next}"
		RESPOND TYPE=command MSG="action:prompt_show"

          {% set myjob=6002 %}

	{% endif %}

	{% if NEWJOB == 5999 %}

          M{printer["gcode_macro m600cfg"].output|int} M600 cancelled, resuming the print.

          {% if printer["gcode_macro JOB_CENTER"].temperature != 0 %}

			LOW_TEMP_CHECK T={printer["gcode_macro JOB_CENTER"].temperature} OVERRIDE=1

		{% endif %}

	     RESUME
          RESPOND TYPE=command MSG="action:notification M600 cancelled, resuming the print."

		{% set myjob=0 %}

	{% endif %}

	{% if NEWJOB == 600 %}

		PAUSE
		M125
		{% set cool=printer["gcode_macro m600cfg"].cooldown|int %}
          {% set cool=printer["gcode_macro m600cfg"].fans|int %}
		{% set mystep=[printer["gcode_macro m600cfg"].step_a1,printer["gcode_macro m600cfg"].step_b1,printer["gcode_macro m600cfg"].step_d1]|join() %}
		{% if cool != 0 %}

			M104 S0
			{% set mystep=[printer["gcode_macro m600cfg"].step_a1,printer["gcode_macro m600cfg"].step_c1,printer["gcode_macro m600cfg"].step_d1]|join() %}

		{% endif %}
          {% if fans != 0 %}

			M107

		{% endif %}

		SET_IDLE_TIMEOUT TIMEOUT=45
		
		RESPOND TYPE=command MSG="action:prompt_begin {mystep}"
		RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].next}"
		RESPOND TYPE=command MSG="action:prompt_choice {printer["gcode_macro m600cfg"].cancel}"
		RESPOND TYPE=command MSG="action:prompt_show"

          {% set myjob=6001 %}

	{% endif %}

	SET_GCODE_VARIABLE MACRO=JOB_CENTER VARIABLE=job VALUE={myjob}


##################
[gcode_macro M125]
##################

gcode:

	M{printer["gcode_macro m600cfg"].output|int} Moving hotend to {printer["gcode_macro m600cfg"].x|int}, {printer["gcode_macro m600cfg"].y|int}, {printer["gcode_macro m600cfg"].z|int} ({printer["gcode_macro m600cfg"].zmin|int})
	SET_GCODE_VARIABLE MACRO=JOB_CENTER VARIABLE=temperature VALUE={printer.extruder.target}

	{% if printer.toolhead.homed_axes != "xyz" %}
	# if  not yet homed

		M{printer["gcode_macro m600cfg"].output|int} Homing the printer...
		G28

	{% endif %}

     G91

#    Retract a small amount before moving if printer has a temperature set
	{% if printer.extruder.target != 0 %}

	     LOW_TEMP_CHECK
          G1 {printer["gcode_macro m600cfg"].park_retract_length|int} F{printer["gcode_macro m600cfg"].park_retract_feedrate|int}

	{% endif %}

	{% if printer.toolhead.position.z|float + printer["gcode_macro m600cfg"].z|float < printer.configfile.config["stepper_z"]["position_max"]|float %}

		{% if  printer.toolhead.position.z < printer["gcode_macro m600cfg"].zmin|int %}

        	  G1 Z{printer["gcode_macro m600cfg"].zmin|int|int-printer.toolhead.position.z|int}

		{% else %}

               SAVE_GCODE_STATE NAME=save_state
          	G1 Z{printer["gcode_macro m600cfg"].z|int}
               RESTORE_GCODE_STATE NAME=save_state

     	{% endif %}

	{% endif%}


	G90
	G1 X{printer["gcode_macro m600cfg"].x|int} Y{printer["gcode_macro m600cfg"].y|int} F{printer["gcode_macro m600cfg"].park_feedrate|int}

##################
[gcode_macro M701]
##################

gcode:

     M83
     G92 E0.0
     LOW_TEMP_CHECK
     G1 E{printer["gcode_macro m600cfg"].slow_load_length|int} F{printer["gcode_macro m600cfg"].slow_load_length|int}
     G92 E0.0
     G1 E{printer["gcode_macro m600cfg"].fast_load_length|int} F{printer["gcode_macro m600cfg"].fast_load_feedrate|int}
     G92 E0.0
     G1 E{printer["gcode_macro m600cfg"].purge_length|int} F{printer["gcode_macro m600cfg"].purge_feedrate|int}
     G92 E0.0
     M82


##################
[gcode_macro M702]
##################

gcode:

     LOW_TEMP_CHECK
     G91
	{% if printer.toolhead.homed_axes != "z" %}
	     # If Z-Axis Not Homed
          SET_KINEMATIC_POSITION Z=0    
          G0 Z{printer["gcode_macro m600cfg"].z|int} F{printer["gcode_macro m600cfg"].z_feedrate|int}
     {% else %}
          # If Z-Axis Homed
          G0 Z{printer["gcode_macro m600cfg"].z|int} F{printer["gcode_macro m600cfg"].z_feedrate|int}
     {% endif %}
     G1 E-{printer["gcode_macro m600cfg"].unload_purge_retract|int} F{printer["gcode_macro m600cfg"].unload_purge_feedrate|int}
     G4 P{printer["gcode_macro m600cfg"].unload_purge_delay|int}
     G1 E{printer["gcode_macro m600cfg"].unload_purge_length|int} F{printer["gcode_macro m600cfg"].unload_purge_feedrate|int}
     G1 E-{printer["gcode_macro m600cfg"].unload_length|int} F{printer["gcode_macro m600cfg"].unload_feedrate|int}
     G90


##################
[gcode_macro M600]
##################

gcode:

	JOB_CENTER NEWJOB=600


############################
[gcode_macro LOW_TEMP_CHECK]
############################

gcode:
     {% if not params.OVERRIDE is defined %}

          {% if params.T is defined %}

               {% set TMP=params.T|int%}

               {% if printer.configfile.config.extruder.max_temp is defined %}

                    {% if params.T|int>printer.configfile.config.extruder.max_temp|int %}

                         {% set TMP=printer["gcode_macro m600cfg"].default_temp|int %}

                    {% endif %}

               {% endif %}

               {% if TMP|int==0 %}

               {% set TMP=printer["gcode_macro m600cfg"].default_temp|int %}

          {% endif %}

     {% else %}

          {% set TMP=printer["gcode_macro m600cfg"].default_temp|int %}

          {% if printer["gcode_macro JOB_CENTER"].temperature|int > 0 %}

               {% set TMP=printer["gcode_macro JOB_CENTER"].temperature %}

          {% endif %}

     {% endif %}

     {% if printer.configfile.config.extruder.min_extrude_temp is defined %}

          {% if TMP|int<printer.configfile.config.extruder.min_extrude_temp|int %}

               {% set TMP=printer["gcode_macro m600cfg"].default_temp %}

          {% endif%}

     {% endif %}

     {% else %}

          {% if params.T is defined %}

               {% set TMP=params.T|int %}

          {% else %}

               {% set TMP=printer["gcode_macro m600cfg"].default_temp %}

          {% endif %}

     {% endif %}

     {% if printer.extruder.temperature|int > TMP|int %}

               M{printer["gcode_macro m600cfg"].output|int} Temperature set to {TMP}.
               M104 S{TMP}

          {% else %}

               M{printer["gcode_macro m600cfg"].output|int} Heating to {TMP}.
               M109 S{TMP}

     {% endif %}